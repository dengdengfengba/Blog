(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{189:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("在 GIS 中，地图一般分为两大类："),a("strong",[t._v("栅格地图")]),t._v("和"),a("strong",[t._v("矢量地图")]),t._v("，"),a("strong",[t._v("栅格地图")]),t._v("其实就是数码照片，只不过有的是卫星拍的。它们有一个共同特征，就是它们都是由很多个像素组成，像素大小是一致的，行高和列宽是一致的，从这个角度看，一幅遥感影像就像栅格。而"),a("strong",[t._v("矢量地图")]),t._v("，是由很多要素组成的，每个要素都有自己的地理坐标，基于数学规则，无论矢量地图怎么放大，地图都不会失真。它是 "),a("code",[t._v("OpenLayers")]),t._v(" 中非常重要的一种图层类型，利用矢量地图可以实现非常多的功能，如 "),a("strong",[t._v("动态标绘")]),t._v("、"),a("strong",[t._v("调用WFS 服务")]),t._v("、"),a("strong",[t._v("编辑要素")]),t._v("、"),a("strong",[t._v("可点击的要素")]),t._v("、"),a("strong",[t._v("动态加载要素")]),t._v(" 等等。")]),t._v(" "),a("h2",{attrs:{id:"图层构成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图层构成","aria-hidden":"true"}},[t._v("#")]),t._v(" 图层构成")]),t._v(" "),a("p",[t._v("矢量图层是在客户端渲染的，在 web 环境中，对应的就是浏览器。构成一个矢量图层的包含一个数据（"),a("code",[t._v("source")]),t._v("）和一个样式（"),a("code",[t._v("style")]),t._v("），数据构成矢量图层的要素，样式规定要素显示的方式和外观。一个初始化成功的矢量图层包含一个到多个要素（"),a("code",[t._v("feature")]),t._v("），每个要素由地理属性（"),a("code",[t._v("geometry")]),t._v("）和多个其他的属性，可能包含名称等。结构如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150605145054554",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("在初始化矢量图层时，可以有很多选项配置矢量图层的行为和外观，常用的有：")]),t._v(" "),a("ul",[a("li",[t._v("brightness、contrast，图层亮度和对比度，都是一个数值")]),t._v(" "),a("li",[t._v("renderOrder，一个指定规则的函数 (function(ol.Feature, ol.Feature))")]),t._v(" "),a("li",[t._v("hue，色调，是一个数值")]),t._v(" "),a("li",[t._v("minResolution，可见的最小分辨率")]),t._v(" "),a("li",[t._v("maxResolution，可见的最大分辨率")]),t._v(" "),a("li",[t._v("opacity，图层的透明度，0～1之间的数值，1表示不透明")]),t._v(" "),a("li",[t._v("saturation，饱和度")]),t._v(" "),a("li",[t._v("source，图层数据来源")]),t._v(" "),a("li",[t._v("style，图层样式，一个ol.style.Style或者一个ol.style.Style数组，或者一个返回 ol.style.Style 的函数")]),t._v(" "),a("li",[t._v("visible，图层可见性，默认为 true")])]),t._v(" "),a("h2",{attrs:{id:"初始化图层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化图层","aria-hidden":"true"}},[t._v("#")]),t._v(" 初始化图层")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vector "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data/china_province_boundries.geojson'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:3857'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GeoJSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        extractStyles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" style\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("例中的 "),a("code",[t._v("source url")]),t._v(" 设置了数据的来源，"),a("code",[t._v("projection")]),t._v(" 设置了地理坐标系，"),a("code",[t._v("format")]),t._v(" 设置 数据的解析器，因为 url 规定的数据来源是 "),a("code",[t._v("geojson")]),t._v(" 格式，所以解析器也是 "),a("code",[t._v("geojson")]),t._v(" 解析器 "),a("code",[t._v("new ol.format.GeoJSON")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"取得元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#取得元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 取得元素")]),t._v(" "),a("p",[t._v("利用 "),a("code",[t._v("getGeometry()")]),t._v(" 可以获得要素的地理属性，这个函数当然返回要素包含的 "),a("code",[t._v("geometry")]),t._v("，"),a("code",[t._v("geometry")]),t._v(" 包含很多类型，主要有 "),a("code",[t._v("point")]),t._v("、"),a("code",[t._v("multi point")]),t._v("、"),a("code",[t._v("linear ring")]),t._v("、"),a("code",[t._v("line string")]),t._v("、"),a("code",[t._v("multi line string")]),t._v("、"),a("code",[t._v("polygon")]),t._v("、"),a("code",[t._v("multi polygon")]),t._v("、"),a("code",[t._v("circle")]),t._v("。")]),t._v(" "),a("p",[t._v("取得 "),a("code",[t._v("geometry")]),t._v(" 后，就可以获得要素的坐标了，可以根据坐标做一些地理判断，比如判断 一个坐标是否位于要素内（"),a("code",[t._v("containsCoordinate(coordinate)")]),t._v(" 或者 "),a("code",[t._v("containsXY(x, y)")]),t._v("），取得要素的中心坐标等。\n————————————————")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("使用矢量图层，可以实现很多功能，比如"),a("strong",[t._v("动态加载矢量数据")]),t._v("、"),a("strong",[t._v("调用 WFS 服务")]),t._v("、"),a("strong",[t._v("动态标绘")]),t._v("、"),a("strong",[t._v("编辑要素")]),t._v("，分别是在"),a("strong",[t._v("图层级别")]),t._v("和"),a("strong",[t._v("要素级别")]),t._v("进行的操作。")]),t._v(" "),a("p",[t._v("例如可以实现，在矢量图层上绘制不同的图形，并添加属性，然后更新至数据库，即动态标绘系统；或者动态加载要素级数据，比如跟踪汽车的轨迹。")]),t._v(" "),a("h2",{attrs:{id:"相关链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关链接","aria-hidden":"true"}},[t._v("#")]),t._v(" 相关链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qingyafan/article/details/46397803",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN庆祝亚运会"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);