(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{156:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"layers类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#layers类","aria-hidden":"true"}},[t._v("#")]),t._v(" layers类")]),t._v(" "),a("p",[a("code",[t._v("layers")]),t._v("定义：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* @classdesc\n* Abstract base class; normally only used for creating subclasses and not\n* instantiated in apps.\n* A visual representation of raster or vector map data.\n* Layers group together those properties that pertain to how the data is to be\n* displayed, irrespective of the source of that data.\n*/")]),t._v("\n")])])]),a("p",[t._v("layer 是一个虚基类，只用于让子类型继承和实现，自身不能实例化。")]),t._v(" "),a("p",[t._v("主要功能是对 矢量地图数据 和 栅格地图数据的可视化表达。图层的外观，主要与数据渲染方式有关，与数据的来源关系不大。")]),t._v(" "),a("p",[t._v("其主要继承子类有：热度图层("),a("code",[t._v("heatmaplayer")]),t._v(")、图片图层("),a("code",[t._v("imagelayer")]),t._v(")、切片图层("),a("code",[t._v("tilelayer")]),t._v(") 和 矢量图层("),a("code",[t._v("vectorlayer")]),t._v(") 四种类型，它们都是继承 "),a("code",[t._v("Layer")]),t._v(" 类的。")]),t._v(" "),a("p",[t._v("初始化传值参数有：")]),t._v(" "),a("ul",[a("li",[t._v("brightness: 亮度，默认为 0")]),t._v(" "),a("li",[t._v("contrast: 对比度，默认为 1")]),t._v(" "),a("li",[t._v("hue: 色调，默认为0")]),t._v(" "),a("li",[t._v("opacity: 透明度，默认为 1 ，即完全透明")]),t._v(" "),a("li",[t._v("saturation: 饱和度，默认为 1")]),t._v(" "),a("li",[t._v("source: 图层的来源，如果在构造函数中没有传入相应的参数，可以调用 "),a("code",[t._v("ol.layer.Layer#setSource")]),t._v("方法来设置来源：      layer.setSource(source)")]),t._v(" "),a("li",[t._v("visible: 是否可见，默认为 true")]),t._v(" "),a("li",[t._v("extent: 图层渲染的区域，即浏览器窗口中可见的地图区域。"),a("code",[t._v("extent")]),t._v(" 是一个矩形范围，格式是"),a("code",[t._v("[number, number, number, number]")]),t._v(" 分别代表"),a("code",[t._v("[left, bottom, right, top]")]),t._v("。如果没有设置该参数，图层就不会显示")]),t._v(" "),a("li",[t._v("minResolution: 图层可见的最小分辨率，当图层的缩放级别小于这个分辨率时，图层就会隐藏")]),t._v(" "),a("li",[t._v("maxResolution: 图层可见的最大分辨率，当图层的缩放级别等于或超过这个分辨率时，图层就会隐藏")])]),t._v(" "),a("p",[t._v("包含的共有方法：")]),t._v(" "),a("ul",[a("li",[t._v("getLayersArray( ): 得到所有图层组成的数组；")]),t._v(" "),a("li",[t._v("getLayerStatesArray( ): 得到所有图层状态组成的数组；")]),t._v(" "),a("li",[t._v("getSource( ): 得到相应图层的来源；")]),t._v(" "),a("li",[t._v("getSourceState( ): 得到相应图层的来源状态；")]),t._v(" "),a("li",[t._v("handleSourceChange_( ): 处理 "),a("code",[t._v("source")]),t._v(" 变动的函数；")]),t._v(" "),a("li",[t._v("handleSourcePropertyChange_( ): 处理 "),a("code",[t._v("source")]),t._v(" 属性变动的函数；")]),t._v(" "),a("li",[t._v("setSource( ): 设置图层 "),a("code",[t._v("source")]),t._v(" 属性，参数为一个 "),a("code",[t._v("source")]),t._v(" 对象。")])]),t._v(" "),a("p",[t._v("包含的私有方法有：")]),t._v(" "),a("ul",[a("li",[t._v("visibleAtResolution( )，参数是 "),a("code",[t._v("layerState")]),t._v(" 和 "),a("code",[t._v("resolution")]),t._v("，如果图层可见，返回 true ，如果传入了 "),a("code",[t._v("resolution")]),t._v("，也会比较 "),a("code",[t._v("resolution")]),t._v(" 是否在 "),a("code",[t._v("minResolution")]),t._v(" 和 "),a("code",[t._v("maxResolution")]),t._v(" 之间。")])]),t._v(" "),a("p",[t._v("在初始化传值参数中，"),a("router-link",{attrs:{to:"/gis/openlayer/source.html"}},[t._v("source")]),t._v("是一个比较重要的属性，没有它，图层就没有实质性内容，这个 "),a("code",[t._v("source")]),t._v(" 是什么呢，打开 "),a("code",[t._v("ol.source")]),t._v(" 目录可以看到，有一个 "),a("code",[t._v("source")]),t._v(" 基类，其余都是继承其的子类，这些子类非常的多：")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("imagesource.js（imagelayer的图层来源基类）")]),t._v(" "),a("ul",[a("li",[t._v("imagecanvassource.js")]),t._v(" "),a("li",[t._v("imagemapguidesource.js")]),t._v(" "),a("li",[t._v("imagestaticsource.js")]),t._v(" "),a("li",[t._v("imagevectorsource.js")]),t._v(" "),a("li",[t._v("imagewmssource.js")])])]),t._v(" "),a("li",[a("p",[t._v("tilesource.js（切片图层 – tilelayer的来源基类）")]),t._v(" "),a("ul",[a("li",[t._v("tilearcgisrestsource.js")]),t._v(" "),a("li",[t._v("tiledebugsource.js")]),t._v(" "),a("li",[t._v("tilejsonsource.js")]),t._v(" "),a("li",[t._v("tileutfgridsource.js")]),t._v(" "),a("li",[t._v("tilevectorsource.js")]),t._v(" "),a("li",[t._v("tilewmssource.js")]),t._v(" "),a("li",[t._v("tileimagesource.js\n"),a("ul",[a("li",[t._v("zoomifysource.js")]),t._v(" "),a("li",[t._v("wmtssource.js，具有 WMTS 功能的服务器的发布的切片图层")]),t._v(" "),a("li",[t._v("bingmapssource.js，bingmaps也是属于切片图层类型，因为微软提供的是切片")]),t._v(" "),a("li",[t._v("xyzsource.js，一个具有 XYZ 格式的数据集\n"),a("ul",[a("li",[t._v("mapquestsource.js")]),t._v(" "),a("li",[t._v("osmsource.js")]),t._v(" "),a("li",[t._v("stamensource.js")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("vectorsource.js（vectorlayer的图层来源基类）")]),t._v(" "),a("ul",[a("li",[t._v("clustersource.js")])])]),t._v(" "),a("li",[a("p",[t._v("wmssource.js，包含了 geoserver 、geoserver 、geoserver 和 geoserver 等，这些地图服务器发布的基于 WMS 协议的图层服务")])])]),t._v(" "),a("p",[t._v("地图图层数据的来源有很多，同时格式也各异。实际应用，应该根据实际情况进行选择。")]),t._v(" "),a("h2",{attrs:{id:"图层类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图层类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 图层类型")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("OpenLayers")]),t._v("中，"),a("code",[t._v("Layer")]),t._v(" 类型包括 "),a("code",[t._v("heatmaplayer")]),t._v("、"),a("code",[t._v("imagelayer")]),t._v("、"),a("code",[t._v("tilelayer")]),t._v(" 和 "),a("code",[t._v("vectorlayer")]),t._v(" 四种类型，它们都继承了 "),a("code",[t._v("ol.layer.Layer")]),t._v(" 类，监听和触发的事件都在"),a("code",[t._v("ol.render.Event")]),t._v("中定义，共用的属性和状态都是在"),a("code",[t._v("layerbase")]),t._v("中定义的，它们除了从"),a("code",[t._v("ol.layer.Layer")]),t._v(" 类继承而来的参数外，还定义了自己的属性和方法。")]),t._v(" "),a("h2",{attrs:{id:"heatmaplayer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#heatmaplayer","aria-hidden":"true"}},[t._v("#")]),t._v(" heatmaplayer")]),t._v(" "),a("p",[t._v("将矢量数据渲染成热度图的类，继承自"),a("code",[t._v("ol.layer.Vector")]),t._v("类，"),a("code",[t._v("ol.layer.Vector")]),t._v("继承了"),a("code",[t._v("ol.layer.Layer")]),t._v(" 类， 额外的参数是 "),a("code",[t._v("olx.layer.HeatmapOptions")]),t._v(" ，其定义如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @enum {string}\n */")]),t._v("\nol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HeatmapLayerProperty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLUR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blur'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GRADIENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gradient'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RADIUS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'radius'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("我们发现"),a("code",[t._v("heatmaplayer")]),t._v("图层比起其它类型的图层多了三个属性，常用的是 "),a("code",[t._v("blur")]),t._v(" 和 "),a("code",[t._v("radius")]),t._v("，这两个属性什么作用呢，我们可以调整一下看看效果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150423001148367",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("没错，"),a("code",[t._v("blur")]),t._v(" 控制圆点的边缘，对边缘做模糊化； "),a("code",[t._v("radius")]),t._v(" 则规定了圆点的半径。注：并不是点，而是圆。")]),t._v(" "),a("h3",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("首先创建一个 "),a("code",[t._v("heatmaplayer")]),t._v(" 对象：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vector "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Heatmap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("KML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data/kml/2012_Earthquakes_Mag5.kml'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:3857'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    extractStyles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  blur"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blur"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  radius"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("radius"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这里 "),a("code",[t._v("heatmap")]),t._v(" 使用"),a("code",[t._v("KML")]),t._v("格式，本地文件"),a("code",[t._v("data/kml/2012_Earthquakes_Mag5.kml")]),t._v(" 作为 "),a("code",[t._v("heatmap")]),t._v(" 的来源，数据是2012年全球地震发生的位置和震级等简单的描述信息，然后将 "),a("code",[t._v("heatmap")]),t._v("图层加到"),a("code",[t._v("map")]),t._v("中：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化map")]),t._v("\n    target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'map'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MapQuest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      heatmap\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("View")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.41")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.82")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:4326'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:3857'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      zoom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("效果展示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150510090800756",alt:"markdown",title:"markdown"}})]),t._v(" "),a("h2",{attrs:{id:"imagelayer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#imagelayer","aria-hidden":"true"}},[t._v("#")]),t._v(" imagelayer")]),t._v(" "),a("p",[t._v("主要是指服务器端渲染的图像，可能是已经渲染好的图像，或者是每一次请求，都根据请求内容定制化地生成一幅图片，该图层类型支持任意的范围和分辨率。")]),t._v(" "),a("h3",{attrs:{id:"实例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("首先实例化一幅图片图层：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * create an imageLayer \n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" extent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3264")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2448")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" projection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Projection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:4326'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            extent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extent\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" imageLayer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ImageStatic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sample.jpg'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        imageExtent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extent\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("与 "),a("code",[t._v("heatmap")]),t._v(" 一样，首先需要传入 "),a("code",[t._v("URL")]),t._v(" 参数，即图片地址，这里可以是网络图片的地址，或者是本地的文件地址；然后需要传入参考坐标系 "),a("code",[t._v("projection")]),t._v("，"),a("code",[t._v("code")]),t._v(" 是一个标识，可以是任何字符串，如果是"),a("code",[t._v("EPSG：4326")]),t._v(" 或者是 "),a("code",[t._v("EPSG：3857")]),t._v(" ，那么就会使用这两个坐标系，如果不是，就使用默认的坐标系，"),a("code",[t._v("extent")]),t._v(" 是一个矩形范围，上面已经提到；"),a("code",[t._v("imageLayer")]),t._v(" 的第三个参数是 "),a("code",[t._v("imageExtent")]),t._v(" 表示图片的尺寸，这里我们不能改变图片的原来的比例，图片只会根据原来的比例放大或缩小。")]),t._v(" "),a("p",[t._v("最后将 "),a("code",[t._v("imageLayer")]),t._v(" 加到地图中：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化map")]),t._v("\n    target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'map'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" imageLayer "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("View")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCenter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      zoom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[t._v("效果展示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150510090637480",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("放大后的效果展示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150510090843422",alt:"markdown",title:"markdown"}})]),t._v(" "),a("h2",{attrs:{id:"tilelayer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tilelayer","aria-hidden":"true"}},[t._v("#")]),t._v(" tilelayer")]),t._v(" "),a("p",[t._v("切片地图是比较常用的图层类型，切片的概念，就是利用网格将一幅地图切成大小相等的小正方形，如图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150424175110036",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("这样就明白我们使用百度地图等地图时为什么网速慢时候，会一块一块的加载的原因了吧！对，因为是切片。")]),t._v(" "),a("p",[t._v("当请求地图的时候，会请求视口（也就是浏览器可见的区域）可见的区域内包含的切片，其余的切片不会请求，这样就节省了网络带宽，而且一般这些切片都是预先切好的，且分为不同的缩放级别，根据不同的缩放级别分成不同的目录。如果将这些切片地图放到缓存中，那访问速度会更快。")]),t._v(" "),a("p",[t._v("继承了 "),a("code",[t._v("ol.layer.Layer")]),t._v(" ，额外的参数是 "),a("code",[t._v("olx.layer.TileOptions")]),t._v(" ，其定义如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* @typedef {{brightness: (number|undefined),\n* contrast: (number|undefined),\n* hue: (number|undefined),\n* opacity: (number|undefined),\n* preload: (number|undefined),\n* saturation: (number|undefined),\n* source: (ol.source.Tile|undefined),\n* visible: (boolean|undefined),\n* extent: (ol.Extent|undefined),\n* minResolution: (number|undefined),\n* maxResolution: (number|undefined),\n* useInterimTilesOnError: (boolean|undefined)}}\n* @api\n*/")]),t._v("\n")])])]),a("p",[t._v("可以看出，多出了 "),a("code",[t._v("preload")]),t._v(" 和 "),a("code",[t._v("useInterimTilesOnError")]),t._v(" 两个参数，"),a("code",[t._v("preload")]),t._v(" 是在还没有将相应分辨率的渲染出来的时候，将低分辨率的切片先放大到当前分辨率（可能会有模糊），填充到相应位置，默认是 0，现在也就明白了当网速慢时，为什么地图会先是模糊的，然后再变清晰了吧，就是这个过程！"),a("code",[t._v("useInterimTilesOnError")]),t._v("是指当加载切片发生错误时，是否用一个临时的切片代替，默认值是 true。")]),t._v(" "),a("h3",{attrs:{id:"实例-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-3","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("其实在 加载地图的例子 中，我们就是请求 "),a("code",[t._v("MapQuest")]),t._v(" 的切片地图：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化map")]),t._v("\n    target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'map'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MapQuest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("View")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      center"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.41")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.82")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:4326'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:3857'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      zoom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("其中的 "),a("code",[t._v("ol.layer.Tile")]),t._v(" 就是切片图层类型，来源是 "),a("code",[t._v("MapQuest")]),t._v(" ，"),a("code",[t._v("layer")]),t._v("\n是请求的图层的类型， "),a("code",[t._v("MapQuest")]),t._v(" 有三种类型的图层："),a("code",[t._v("osm")]),t._v(", "),a("code",[t._v("sat")]),t._v(" 和 "),a("code",[t._v("hyb")]),t._v(" ，"),a("code",[t._v("osm")]),t._v(" 就是 "),a("code",[t._v("OpenStreetMap")]),t._v(" 的缩写，是其提供的数据， "),a("code",[t._v("sat")]),t._v(" 是卫星图，"),a("code",[t._v("hyb")]),t._v(" 是两种类型的混合图层。")]),t._v(" "),a("p",[t._v("我们可以查看一下浏览器的网络请求内容：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150510090717120",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("这里是 "),a("code",[t._v("Firefox")]),t._v(" 浏览器的 "),a("code",[t._v("Firebug")]),t._v(" 网络请求面板，可见其请求的图片，是一块块的，且是基于一定的编号规则进行编号的。")]),t._v(" "),a("h2",{attrs:{id:"vectorlayer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vectorlayer","aria-hidden":"true"}},[t._v("#")]),t._v(" vectorlayer")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("OpenLayers")]),t._v("之使用"),a("code",[t._v("Vector Layer")]),t._v(" 中曾经使用过，即矢量图层，矢量图层实际上是在客户端渲染的图层类型，服务器返回的数据或者文件会通过 "),a("code",[t._v("OpenLayers")]),t._v(" 进行渲染，得到相应的矢量图层。")]),t._v(" "),a("p",[t._v("在客户端渲染的矢量数据图层("),a("router-link",{attrs:{to:"/gis/openlayer/vector.html"}},[t._v("vector")]),t._v(")，继承了 "),a("code",[t._v("ol.layer.Layer")]),t._v(" ，额外的参数是 "),a("code",[t._v("olx.layer.VectorOptions")]),t._v(" ，其定义如下：")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @typedef {{brightness: (number|undefined),\n *     contrast: (number|undefined),\n *     renderOrder: (function(ol.Feature, ol.Feature):number|null|undefined),\n *     hue: (number|undefined),\n *     minResolution: (number|undefined),\n *     maxResolution: (number|undefined),\n *     opacity: (number|undefined),\n *     renderBuffer: (number|undefined),\n *     saturation: (number|undefined),\n *     source: (ol.source.Vector|undefined),\n *     style: (ol.style.Style|Array.<ol.style.Style>|ol.style.StyleFunction|undefined),\n *     updateWhileAnimating: (boolean|undefined),\n *     updateWhileInteracting: (boolean|undefined),\n *     visible: (boolean|undefined)}}\n * @api\n */")]),t._v("\n")])])]),a("p",[t._v("相对于一般的图层，多出了 "),a("code",[t._v("renderOrder")]),t._v("、"),a("code",[t._v("renderBuffer")]),t._v("、"),a("code",[t._v("style")]),t._v("、"),a("code",[t._v("updateWhileAnimating")]),t._v(" 和 "),a("code",[t._v("updateWhileInteracting")]),t._v(" 五个参数。"),a("code",[t._v("renderOrder")]),t._v(" 是指渲染地理要素时的顺序，一般情况下，在渲染之前，要素是基于一定规则排序的，而渲染就是根据这个顺序进行依次渲染的，这个参数便指定了这个排序规则，如果赋值为 null ，那么就不会对地理要素进行排序，渲染也不会有一定的顺序；"),a("code",[t._v("renderBuffer")]),t._v(" 表示地图的视口区域的缓冲区；style 规定了矢量图层的样式，就是配色和形状等等；u"),a("code",[t._v("pdateWhileAnimating")]),t._v(" 表示当有动画特效时，地理要素是否被重新创建，默认是 false，当设置为 true 时，可能会对性能有所影响；"),a("code",[t._v("updateWhileInteracting")]),t._v(" 表示当 地理要素 交互时，是否会被重新渲染。")]),t._v(" "),a("h3",{attrs:{id:"实例-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-4","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[t._v("首先创建一个实例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vectorLayer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化矢量图层")]),t._v("\n  source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GeoJSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    projection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EPSG:3857'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data/geojson/countries.geojson'")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//从文件加载边界等地理信息")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("feature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolution "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" feature"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当放大到1:5000分辨率时，显示国家名字")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("服务器返回的 "),a("code",[t._v("GeoJSON")]),t._v(" 格式的文件 "),a("code",[t._v("data/geojson/countries.geojson")]),t._v(" 包含国家的边界数据，属于多边形类型，经过 "),a("code",[t._v("OpenLayers")]),t._v(" 渲染之后得到结果如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150510090747618",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("可以看到蓝色的线为各个国家的边界，当鼠标在某个国家上方时，相应的区块会变红色，这是添加的事件，我们可以改变其样式，注意到 "),a("code",[t._v("vectorlayer")]),t._v(" 相对于其他类型的图层，还包含了一个 style 参数，这个参数便是控制矢量图层的外观样式的，其定义如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 定义矢量图层\n * 其中style是矢量图层的显示样式 \n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" style "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//矢量图层填充颜色，以及透明度")]),t._v("\n    color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rgba(255, 255, 255, 0.6)'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  stroke"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stroke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//边界样式")]),t._v("\n    color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#319FD3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//文本样式")]),t._v("\n    font"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12px Calibri,sans-serif'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#000'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    stroke"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stroke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#fff'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      width"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("style")]),t._v(" 是一个 "),a("code",[t._v("ol.style.Style")]),t._v(" 类型，矢量图层是可以调节透明度的，如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("fill"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//矢量图层填充颜色，以及透明度")]),t._v("\n    color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rgba(255, 255, 255, 0.6)'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("rgba 的最后一个变量就是控制透明度的变量，范围是 0~1，0 表示不透明，1 代表完全透明。因为这里主要讲 Layer，所以关于 "),a("code",[t._v("ol.style.Style")]),t._v(" 其它的内容，可看"),a("router-link",{attrs:{to:"/gis/openlayer/style.html"}},[t._v("style")]),t._v("。")],1),t._v(" "),a("p",[t._v("##　思考")]),t._v(" "),a("p",[t._v("现在非常流行的地图，如百度地图或者高德地图提供的是什么layer类型呢？我们来分别看看它们在 Firefox 看到的网络请求图：")]),t._v(" "),a("p",[t._v("百度地图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150510091259450",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("高德地图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20150510091120028",alt:"markdown",title:"markdown"}})]),t._v(" "),a("p",[t._v("我们可以看出，它们都是提供的网络切片图层类型，而一些加载的地理要素，如酒店等，便是加载在一个矢量图层中的，所以说，它们是混杂着切片图层和矢量图层的。")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("其实图层可以按照渲染的位置分为两类，一类是在服务器端渲染好，以图片形式返回浏览器的， "),a("code",[t._v("imagelayer")]),t._v(" 和 "),a("code",[t._v("tilelayer")]),t._v(" 都是属于这种类型；另一类是在浏览器渲染的图层类型，"),a("code",[t._v("vectorlayer")]),t._v(" 和 "),a("code",[t._v("heatmaplayer")]),t._v(" 就是这种类型。")]),t._v(" "),a("h2",{attrs:{id:"相关链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关链接","aria-hidden":"true"}},[t._v("#")]),t._v(" 相关链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qingyafan/article/details/45398131",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSDN庆祝亚运会"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);