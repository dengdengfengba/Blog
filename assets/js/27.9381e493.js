(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{184:function(e,t,a){"use strict";a.r(t);var s=a(2),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" 介绍")]),e._v(" "),a("p",[e._v("source 是 Layer 的重要组成部分，表示图层的来源，也就是服务地址。除了在构造函数中制定外，可以使用 "),a("code",[e._v("layer.setSource(source)")]),e._v(" 稍后指定。")]),e._v(" "),a("h2",{attrs:{id:"包含的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包含的类型","aria-hidden":"true"}},[e._v("#")]),e._v(" 包含的类型")]),e._v(" "),a("ul",[a("li",[e._v("ol.source.BingMaps: 必应地图的切片数据，继承自ol.source.TileImage")]),e._v(" "),a("li",[e._v("ol.source.Cluster: 聚簇矢量数据，继承自ol.source.Vector")]),e._v(" "),a("li",[e._v("ol.source.ImageCanvas: 数据来源是一个 canvas 元素，其中的数据是图片，继承自 ol.source.Image")]),e._v(" "),a("li",[e._v("ol.source.ImageMapGuide: Mapguide 服务器提供的图片地图数据，继承自 ol.source.Image，fire ol.source.ImageEvent")]),e._v(" "),a("li",[e._v("ol.source.ImageStatic: 提供单一的静态图片地图，继承自ol.source.Image")]),e._v(" "),a("li",[e._v("ol.source.ImageVector: 数据来源是一个 canvas 元素，但是其中的数据是矢量来源 ol.source.Vector，继承自ol.source.ImageCanvas")]),e._v(" "),a("li",[e._v("ol.source.ImageWMS: WMS 服务提供的单一的图片数据，继承自 ol.source.Image，触发 ol.source.ImageEvent")]),e._v(" "),a("li",[e._v("ol.source.MapQuest: MapQuest 提供的切片数据，继承自 ol.source.XYZ")]),e._v(" "),a("li",[e._v("ol.source.OSM: OpenStreetMap 提供的切片数据，继承自 ol.source.XYZ")]),e._v(" "),a("li",[e._v("ol.source.Stamen: Stamen 提供的地图切片数据，继承自 ol.source.XYZ")]),e._v(" "),a("li",[e._v("ol.source.TileVector: 被切分为网格的矢量数据，继承自 ol.source.Vector")]),e._v(" "),a("li",[e._v("ol.source.TileDebug: 并不从服务器获取数据，而是为切片渲染一个网格，继承自 ol.source.Tile")]),e._v(" "),a("li",[e._v("ol.source.TileImage: 提供切分成切片的图片数据，继承自 ol.source.Tile，触发 ol.source.TileEvent")]),e._v(" "),a("li",[e._v("ol.source.TileUTFGrid: TileJSON 格式 的 UTFGrid 交互数据，继承自 ol.source.Tile")]),e._v(" "),a("li",[e._v("ol.source.TileJSON: TileJSON 格式的切片数据，继承自 ol.source.TileImage")]),e._v(" "),a("li",[e._v("ol.source.TileArcGISRest: ArcGIS Rest 服务提供的切片数据，继承自 ol.source.TileImage")]),e._v(" "),a("li",[e._v("ol.source.WMTS: WMTS 服务提供的切片数据。继承自 ol.source.TileImage")]),e._v(" "),a("li",[e._v("ol.source.XYZ: XYZ 格式的切片数据，继承自 ol.source.TileImage")]),e._v(" "),a("li",[e._v("ol.source.Zoomify: Zoomify 格式的切片数据，继承自 ol.source.TileImage")])]),e._v(" "),a("p",[e._v("上面介绍的都是可以实例化的类，还有一部分基类，不能被实例化，只负责被继承，有：")]),e._v(" "),a("ul",[a("li",[e._v("ol.source.Image，提供单一图片数据的类型，直接继承自 ol.source.Source")]),e._v(" "),a("li",[e._v("ol.source.Tile，提供被切分为网格切片的图片数据，继承自 ol.source.Source")]),e._v(" "),a("li",[e._v("ol.source.Vector，提供矢量图层数据，继承自 ol.source.Source")])]),e._v(" "),a("h2",{attrs:{id:"ol-source-vector-用法说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ol-source-vector-用法说明","aria-hidden":"true"}},[e._v("#")]),e._v(" ol.source.Vector 用法说明")]),e._v(" "),a("p",[e._v("矢量图层的数据来源")]),e._v(" "),a("h3",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),a("p",[e._v("包含四个事件，"),a("code",[e._v("addfeature")]),e._v("，"),a("code",[e._v("changefeature")]),e._v("，"),a("code",[e._v("clear")]),e._v("，"),a("code",[e._v("removefeature")]),e._v(":")]),e._v(" "),a("ul",[a("li",[e._v("addfeature，当一个要素添加到 source 中触发")]),e._v(" "),a("li",[e._v("changefeature，当要素变化时触发")]),e._v(" "),a("li",[e._v("clear，当 source 的 clear 方法调用时候触发")]),e._v(" "),a("li",[e._v("removefeature，当要素移除时候发生")])]),e._v(" "),a("h3",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数","aria-hidden":"true"}},[e._v("#")]),e._v(" 参数")]),e._v(" "),a("p",[e._v("官方介绍：")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/**\n * @typedef {{attributions: (Array.<ol.Attribution>|undefined),\n *     features: (Array.<ol.Feature>|undefined),\n *     format: (ol.format.Feature|undefined),\n *     loader: (ol.FeatureLoader|undefined),\n *     logo: (string|olx.LogoOptions|undefined),\n *     strategy: (ol.LoadingStrategy|undefined),\n *     url: (string|undefined),\n *     wrapX: (boolean|undefined)}}\n * @api\n */")]),e._v("\n")])])]),a("ul",[a("li",[e._v("attribution，地图右下角的 logo 包含的内容")]),e._v(" "),a("li",[e._v("features，地理要素，从字符串读取的数据")]),e._v(" "),a("li",[e._v("format，url属性设置后，加载要素使用的数据格式，采用异步的 AJAX 加载")]),e._v(" "),a("li",[e._v("loader，加载要素使用的加载函数")]),e._v(" "),a("li",[e._v("logo，logo包含的内容")]),e._v(" "),a("li",[e._v("strategy，加载要素使用的策略，默认是 一次性加载所有要素")]),e._v(" "),a("li",[e._v("url，要素数据的地址")]),e._v(" "),a("li",[e._v("wrapX，是否在地图水平坐标轴上重复，默认是 true")])]),e._v(" "),a("h3",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例","aria-hidden":"true"}},[e._v("#")]),e._v(" 实例")]),e._v(" "),a("p",[e._v("features 方法\n假如有一个包含空间数据的字符串，geojsonObject，是GeoJSON字符串格式，那么可以用来初始化一个图层。")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" vectorSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    features"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("GeoJSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("readFeatures")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("geojsonObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" vectorLayer "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" vectorSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" style\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("addLayer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("vectorLayer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("议，转载请附上原文出处链接及本声明。\n")])])]),a("p",[e._v("url + format 方法\n如果有一个文件作为数据源，那么可以配置 url 属性来加载数据：")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" vectorLayer "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("layer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Vector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'data/geojson/countries.geojson'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("ol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("GeoJSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("这两种方法中都会指定数据来源格式， 矢量数据源支持的格式包含很多："),a("code",[e._v("gml")]),e._v("、"),a("code",[e._v("EsriJSON")]),e._v("、"),a("code",[e._v("geojson")]),e._v("、"),a("code",[e._v("gpx")]),e._v("、"),a("code",[e._v("igc")]),e._v("、"),a("code",[e._v("kml")]),e._v("、"),a("code",[e._v("osmxml")]),e._v("、"),a("code",[e._v("ows")]),e._v("、"),a("code",[e._v("polyline")]),e._v("、"),a("code",[e._v("topojson")]),e._v("、"),a("code",[e._v("wfs")]),e._v("、"),a("code",[e._v("wkt")]),e._v("、"),a("code",[e._v("wms capabilities")]),e._v("（兼容 wms 的格式）、 "),a("code",[e._v("wms getfeatureinfo")]),e._v("、 "),a("code",[e._v("wmts capabilities")]),e._v("、"),a("code",[e._v("xlink")]),e._v("、"),a("code",[e._v("xsd")]),e._v("等格式。这些格式都有"),a("code",[e._v("readFeatures")]),e._v("、"),a("code",[e._v("readFeature")]),e._v(" 和"),a("code",[e._v("readGeometry")]),e._v("方法用于读取数据。")]),e._v(" "),a("h2",{attrs:{id:"ol-source-tile-用法说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ol-source-tile-用法说明","aria-hidden":"true"}},[e._v("#")]),e._v(" ol.source.Tile 用法说明")]),e._v(" "),a("p",[e._v("提供被切分为切片的图片地图数据")]),e._v(" "),a("p",[e._v("官方介绍：")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/**\n * @typedef {{attributions: (Array.<ol.Attribution>|undefined),\n *            extent: (ol.Extent|undefined),\n *            logo: (string|olx.LogoOptions|undefined),\n *            opaque: (boolean|undefined),\n *            tilePixelRatio: (number|undefined),\n *            projection: ol.proj.ProjectionLike,\n *            state: (ol.source.State|undefined),\n *            tileGrid: (ol.tilegrid.TileGrid|undefined),\n *            wrapX: (boolean|undefined)}}\n */")]),e._v("\n")])])]),a("p",[e._v("可以配置的选项(与 vector 一样的选项就不介绍了，介绍特有的选项):")]),e._v(" "),a("ul",[a("li",[e._v("extent，地图视图默认的坐标范围")]),e._v(" "),a("li",[e._v("opaque，不透明与否，一个布尔值，默认 false")]),e._v(" "),a("li",[e._v("tilePixelRatio，切片的大小调整选项，如 256 × 256，和 512 × 512")]),e._v(" "),a("li",[e._v("projection，投影")]),e._v(" "),a("li",[e._v("state，地图所处的状态，包括undefined，loading，ready，error")]),e._v(" "),a("li",[e._v("tileGrid，覆盖在地图上的格网")])]),e._v(" "),a("p",[e._v("接受的事件：")]),e._v(" "),a("ul",[a("li",[e._v("tileloadstart，切片开始加载时触发的事件")]),e._v(" "),a("li",[e._v("tileloadend，切片加载完毕触发事件")]),e._v(" "),a("li",[e._v("tileloaderror，切片加载出错时的处理")])]),e._v(" "),a("h2",{attrs:{id:"ol-source-image-用法说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ol-source-image-用法说明","aria-hidden":"true"}},[e._v("#")]),e._v(" ol.source.Image 用法说明")]),e._v(" "),a("p",[e._v("提供单一的图片地图。")]),e._v(" "),a("p",[e._v("官方介绍：")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/**\n * @typedef {{attributions: (Array.<ol.Attribution>|undefined),\n *            extent: (null|ol.Extent|undefined),\n *            logo: (string|olx.LogoOptions|undefined),\n *            projection: ol.proj.ProjectionLike,\n *            resolutions: (Array.<number>|undefined),\n *            state: (ol.source.State|undefined)}}\n */")]),e._v("\n")])])]),a("p",[e._v("可以配置的选项(与 vector 一样的选项就不介绍了，介绍特有的选项):")]),e._v(" "),a("ul",[a("li",[e._v("resolutions，地图分辨率。其他的选项都与以上的一样")])]),e._v(" "),a("p",[e._v("触发的事件：")]),e._v(" "),a("ul",[a("li",[e._v("imageloadstart，图片地图开始加载触发的事件")]),e._v(" "),a("li",[e._v("imageloadend，图片地图加载完毕触发的事件")]),e._v(" "),a("li",[e._v("imageloaderror，图片地图加载出错时触发的事件")])]),e._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("p",[e._v("source 是 layer 中必须的选项，定义着地图数据的来源，与数据有关的函数，如"),a("code",[e._v("addfeature")]),e._v("、"),a("code",[e._v("getfeature")]),e._v("等函数都定义在 source 中，而且数据源支持多种格式。")]),e._v(" "),a("h2",{attrs:{id:"相关链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关链接","aria-hidden":"true"}},[e._v("#")]),e._v(" 相关链接")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/qingyafan/article/details/45950125",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSDN庆祝亚运会"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);