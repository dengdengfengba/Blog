(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{190:function(e,t,o){"use strict";o.r(t);var n=o(2),v=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"view属性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#view属性","aria-hidden":"true"}},[e._v("#")]),e._v(" view属性")]),e._v(" "),o("p",[o("code",[e._v("view")]),e._v(" 的构造函数需要的参数是一个 "),o("code",[e._v("olx.ViewOptions")]),e._v("对象，这个对象的描述如下：(跟多详细的代码可在github上查询，这里只做用的比较多的API)")]),e._v(" "),o("div",{staticClass:"language-js extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[o("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/**\n * Object literal with config options for the view.\n * @typedef {{center: (ol.Coordinate|undefined),\n *     constrainRotation: (boolean|number|undefined),\n *     enableRotation: (boolean|undefined),\n *     extent: (ol.Extent|undefined),\n *     minResolution: (number|undefined),\n *     maxResolution: (number|undefined),\n *     minZoom: (number|undefined),\n *     maxZoom: (number|undefined),\n *     projection: ol.proj.ProjectionLike,\n *     resolution: (number|undefined),\n *     resolutions: (Array.<number>|undefined),\n *     rotation: (number|undefined),\n *     zoom: (number|undefined),\n *     zoomFactor: (number|undefined)}}\n * @api\n */")]),e._v("\n")])])]),o("p",[e._v("比较重要的属性有:")]),e._v(" "),o("ul",[o("li",[e._v("center: 一个"),o("code",[e._v("[x, y]")]),e._v("坐标,表示地图视图的中心位置")]),e._v(" "),o("li",[e._v("extent: 一个数组对象"),o("code",[e._v("[left, bottom, right, top]")]),e._v(",表示地图的初始范围")]),e._v(" "),o("li",[e._v("projection: 地图的投影坐标系统")]),e._v(" "),o("li",[e._v("resolution: 表示地图的分辨率，单位并不是普通的单位面积的像素，而是单位像素表示的距离单位，比如 米/像素")]),e._v(" "),o("li",[e._v("rotation: 表示地图的旋转角度")]),e._v(" "),o("li",[e._v("zoom: 表示地图初始的缩放级别")])]),e._v(" "),o("p",[e._v("除此之外，还有一些限制属性："),o("code",[e._v("maxResolution")]),e._v(", "),o("code",[e._v("minResolution")]),e._v(", "),o("code",[e._v("minZoom")]),e._v(", "),o("code",[e._v("maxzoom")]),e._v("等, 这些属性主要限制地图的最大最小分辨率、最大最小缩放级别。")]),e._v(" "),o("p",[e._v("定义view类的方法是 "),o("strong",[e._v("混合使用构造函数模式和原型模式")]),e._v("，构造函数模式部分，主要定义类的私有属性和私有函数，所以以上定义的为每个对象特有的属性，各个对象内容各异；原型模式主要定义类的公有方法，每个实例化的对象保存的都是原型的指针，所以原型模式定义的方法和属性只有一个实例，每个对象都引用这个实例。")]),e._v(" "),o("h2",{attrs:{id:"view方法"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#view方法","aria-hidden":"true"}},[e._v("#")]),e._v(" view方法")]),e._v(" "),o("p",[o("code",[e._v("view")]),e._v("类的方法主要是针对"),o("code",[e._v("view")]),e._v("的属性的 "),o("code",[e._v("get")]),e._v(" 和 "),o("code",[e._v("set")]),e._v(" 方法，其基本的方法很多，常用的方法有：")]),e._v(" "),o("ul",[o("li",[e._v("rotate、isDef")]),e._v(" "),o("li",[e._v("fitExtent、fitGeometry")]),e._v(" "),o("li",[e._v("getCenter、getProjection、getResolution、getRotation、getZoom")]),e._v(" "),o("li",[e._v("setCenter、setResolution、setRotation、setZoom")])]),e._v(" "),o("h3",{attrs:{id:"rotate"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#rotate","aria-hidden":"true"}},[e._v("#")]),e._v(" rotate")]),e._v(" "),o("p",[o("code",[e._v("rotate(rotation , opt_anchor )")]),e._v(": 接受两个参数，旋转角度("),o("code",[e._v("rotation")]),e._v(")和旋转中心("),o("code",[e._v("opt_anchor")]),e._v(", 可选)，将地图围绕"),o("code",[e._v("opt_anchor")]),e._v("旋转"),o("code",[e._v("rotation")]),e._v("角度")]),e._v(" "),o("h3",{attrs:{id:"isdef"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#isdef","aria-hidden":"true"}},[e._v("#")]),e._v(" isDef")]),e._v(" "),o("p",[o("code",[e._v("isDef")]),e._v(": 检查地图的中心和分辨率是否已经设置，都设置返回true，否则返回false")]),e._v(" "),o("h3",{attrs:{id:"fitextent"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#fitextent","aria-hidden":"true"}},[e._v("#")]),e._v(" fitExtent")]),e._v(" "),o("p",[o("code",[e._v("fitExtent(extent, size)")]),e._v(": 接受两个参数："),o("code",[e._v("extent")]),e._v(" 和 "),o("code",[e._v("size")]),e._v("，"),o("code",[e._v("extent")]),e._v(" 类型是 "),o("code",[e._v("ol.Extent – [left, bottom, right, top]")]),e._v("，"),o("code",[e._v("size")]),e._v("由"),o("code",[e._v("map.getSize()")]),e._v("获取；该功能类似于 "),o("code",[e._v("ArcGIS")]),e._v("的缩放到图层功能，将地图的"),o("code",[e._v("view")]),e._v(" 缩放到 "),o("code",[e._v("extent")]),e._v(" 区域可见的合适尺度；")]),e._v(" "),o("h3",{attrs:{id:"fitgeometry"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#fitgeometry","aria-hidden":"true"}},[e._v("#")]),e._v(" fitGeometry")]),e._v(" "),o("p",[o("code",[e._v("fitGeometry(geometry, size, opt_options)")]),e._v(",参数是地理要素，地图尺寸和可选参数；根据给定的地理要素，将 "),o("code",[e._v("view")]),e._v(" 缩放到适合地理要素显示的尺寸；")]),e._v(" "),o("h3",{attrs:{id:"get"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#get","aria-hidden":"true"}},[e._v("#")]),e._v(" get")]),e._v(" "),o("p",[o("code",[e._v("get")]),e._v(": "),o("code",[e._v("getCenter()")]),e._v(" 获取地图的中心，返回一个地图中心的坐标、"),o("code",[e._v("getResolution()")]),e._v("获取地图的分辨率，即比例尺，返回一个表示比例尺的数值、 "),o("code",[e._v("getProjection()")]),e._v("获取地图使用的”投影坐标系统”，如"),o("code",[e._v("EPSG:4326")]),e._v("、"),o("code",[e._v("getRotation()")]),e._v("获取地图的“旋转角度”、"),o("code",[e._v("getZoom()")]),e._v("获取地图的缩放级别，返回一个表示缩放级别的数值；以上的函数均不需要任何参数；")]),e._v(" "),o("h3",{attrs:{id:"set"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#set","aria-hidden":"true"}},[e._v("#")]),e._v(" set")]),e._v(" "),o("p",[o("code",[e._v("set")]),e._v(": "),o("code",[e._v("setCenter(center)")]),e._v("，参数为"),o("code",[e._v("ol.Coordinate")]),e._v("类型 "),o("code",[e._v("– [x, y]")]),e._v("，作用为设置地图的中心坐标、"),o("code",[e._v("setResolution(number)")]),e._v("设置地图的分辨率（比例尺）、"),o("code",[e._v("setRotation(number)")]),e._v("，参数为旋转的角度对应的值，并不是度数，如"),o("code",[e._v("Math.PI")]),e._v("，不是180度，作用是将地图旋转相应点角度，顺时针为正、"),o("code",[e._v("setZoom(number)")]),e._v("设置地图的缩放级别。")]),e._v(" "),o("h2",{attrs:{id:"相关链接"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#相关链接","aria-hidden":"true"}},[e._v("#")]),e._v(" 相关链接")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://blog.csdn.net/qingyafan/article/details/45603415",target:"_blank",rel:"noopener noreferrer"}},[e._v("CSDN庆祝亚运会"),o("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=v.exports}}]);